name: build

on: [push, pull_request]

jobs:
  linux:
    timeout-minutes: 10

    strategy:
      matrix:
        compiler: [g++-7, g++-8, g++-9, g++, clang++-8, clang++-9, clang++]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install g++-7
        if: ${{ matrix.compiler == 'g++-7' }}
        run: |
          sudo apt-get update
          sudo apt-get install g++-7 -y

      - name: Install g++-8
        if: ${{ matrix.compiler == 'g++-8' }}
        run:  |
          sudo apt-get update
          sudo apt-get install g++-8 -y

      - name: Install clang-8
        if: ${{ matrix.compiler == 'clang++-8' }}
        run:  |
          sudo apt-get update
          sudo apt-get install clang-8 -y
        
      - name: Create Build Environment
        run: cmake -E make_directory ${{ runner.workspace }}/build ${{ runner.workspace }}/instdir

      - name: Configure CMake
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake $GITHUB_WORKSPACE -DBUILD_APP=ON
        env:
          CXX: ${{ matrix.compiler }}

      - name: Build
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config Debug

  windows:
    timeout-minutes: 10

    strategy:
      matrix:
        os: [windows-latest, windows-2016]
        toolset: [clang-cl, default, v141]
        include:
          - toolset: clang-cl
            toolset_option: -T"ClangCl"
          - toolset: v141
            toolset_option: -T"v141"
        exclude:
          - os: windows-2016
            toolset: clang-cl
          - os: windows-2016
            toolset: v141

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        run: cmake -E make_directory ${{ runner.workspace }}/build ${{ runner.workspace }}/instdir

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DBUILD_APP=ON
        env:
          CXX: ${{ matrix.compiler }}

      - name: Build
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config Release